/*
 * Animation System
 * ---------------
 * A comprehensive set of animations and transitions for consistent motion design
 * across the site. These animations follow principles of natural movement,
 * appropriate timing, and respect user preferences for reduced motion.
 * 
 * Usage: Import this file to gain access to keyframe animations, utility classes,
 * and component-specific animation triggers.
 */

/* ==============================
   1. Common Animations - Keyframes
   ==============================
   These reusable keyframe definitions can be applied to any element
   using the animation property. Each provides a different motion effect.
*/

/* Fade In - Smooth reveal with subtle upward movement
   Used for: Page elements appearing on load, modals, tooltips
   Customize: Change transform values for different movement distance */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px); /* Subtle upward start position */
    }
    to {
        opacity: 1;
        transform: translateY(0); /* Natural final position */
    }
}

/* Slide Down - Natural dropdown motion with fade
   Used for: Dropdown menus, expandable content, notifications
   Customize: Adjust translateY value to control dropdown distance */
@keyframes slideDown {
    from {
        opacity: 0;
        transform: translateY(-10px); /* Start slightly above */
    }
    to {
        opacity: 1;
        transform: translateY(0); /* Rest at natural position */
    }
}

/* Pulse - Subtle attention-drawing effect
   Used for: Call-to-action buttons, notifications, highlights
   Performance note: Scale transforms are GPU-accelerated */
@keyframes pulse {
    0% {
        transform: scale(1); /* Normal size */
    }
    50% {
        transform: scale(1.05); /* Peak size - 5% larger */
    }
    100% {
        transform: scale(1); /* Return to normal */
    }
}

/* Spin - Continuous rotation effect
   Used for: Loading indicators, processing states, refresh icons
   Performance note: Rotation is optimized for smooth animation */
@keyframes spin {
    0% {
        transform: rotate(0deg); /* Starting position */
    }
    100% {
        transform: rotate(360deg); /* Full rotation */
    }
}

/* ==============================
   2. Animation Utility Classes
   ==============================
   Ready-to-use classes that can be applied directly to HTML elements
   to achieve common animation effects without custom CSS.
*/

/* Fade In Animation - Reveal elements as they enter viewport
   Usage: Add .fade-in class + .visible when element should appear
   Example: <div class="fade-in">Content to reveal</div> */
.fade-in {
    opacity: 0;
    transform: translateY(20px); /* Start 20px below final position */
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

/* Applied when element should become visible (typically via JS) */
.fade-in.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Quick Fade In - For smaller UI elements needing faster appearance
   Usage: Add .quick-fade to any element that should appear quickly
   Example: <span class="quick-fade">New!</span> */
.quick-fade {
    animation: fadeIn 0.3s ease forwards; /* 'forwards' maintains final state */
}

/* Delayed animations - For creating staggered reveal sequences
   Usage: Add both animation class + delay class
   Example: <div class="fade-in delay-2">Appears second</div> */
.delay-1 { animation-delay: 0.1s; } /* Slight delay */
.delay-2 { animation-delay: 0.2s; } /* Minor delay */
.delay-3 { animation-delay: 0.3s; } /* Moderate delay */
.delay-4 { animation-delay: 0.4s; } /* Significant delay */
.delay-5 { animation-delay: 0.5s; } /* Extended delay */

/* ==============================
   3. Component-Specific Animation Triggers
   ==============================
   These animations are triggered by specific state changes in 
   components throughout the site. They ensure consistent motion
   behavior across similar interaction patterns.
*/

/* Merit Badge List Animation - Reveals merit badges when section expands
   Triggered by: Clicking a merit badge year header
   Effect: Smooth slide-in of badge grid */
.merit-badge-year .collapsible.active + .merit-badge-list {
    display: grid; /* Switches from display: none to grid */
    animation: slideDown 0.3s ease; /* Smooth entry */
}

/* Organization Content Animation - Reveals organization details 
   Triggered by: Clicking an organization header in leadership section
   Effect: Smooth fade-in of detailed content */
.organization-group .collapsible.active + .org-content {
    animation: fadeIn 0.3s ease;
}

/* Timeline Item Hover Effect - Creates subtle interaction feedback
   Triggered by: Hovering over timeline events
   Effect: Item slightly rises to indicate interactivity */
.timeline-content {
    transition: transform 0.3s ease; /* Smooth movement on hover */
}

.timeline-content:hover {
    transform: translateY(-5px); /* Rise effect on hover */
}

/* Card Hover Animations - Consistent hover effects across all card types
   Triggered by: Hovering over any card-type component
   Effect: Subtle elevation change with enhanced shadow */
.location-card,
.highlight-card,
.card,
.leadership-item {
    transition: transform 0.2s ease, box-shadow 0.2s ease; /* Smooth transition for both properties */
}

.location-card:hover,
.highlight-card:hover,
.card:hover,
.leadership-item:hover {
    transform: translateY(-5px); /* Subtle "lift" effect */
    box-shadow: var(--shadow-lg, 0 4px 12px rgba(0,0,0,0.15)); /* Enhanced shadow for depth */
}

/* Button Hover Animation - Consistent interactive feedback
   Triggered by: Hovering over any button or action element
   Effect: Slight elevation change to indicate clickability */
.button, 
.button-container a,
.social-link,
.filter-button {
    transition: all 0.3s ease; /* Smooth property changes */
}

.button:hover,
.button-container a:hover {
    transform: translateY(-2px); /* Subtle rise effect */
}

/* Social links get slightly more pronounced effect */
.social-link:hover {
    transform: translateY(-3px); /* More noticeable rise */
}

/* ==============================
   4. Responsive & Accessibility
   ==============================
   Ensures animations respect user preferences and device capabilities,
   following WCAG guidelines for animation and motion.
*/

/* Respect user preferences for reduced motion
   Important for accessibility and users with vestibular disorders
   This completely disables non-essential animations when user has requested reduced motion */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important; /* Practically removes animation */
        animation-iteration-count: 1 !important; /* Prevents looping */
        transition-duration: 0.01ms !important; /* Practically removes transitions */
        scroll-behavior: auto !important; /* Disables smooth scrolling */
    }
}